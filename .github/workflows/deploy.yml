name: Deploy
on:
  push:
    branches:
      - master

jobs:
  backend:
    name: Backend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@main

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: cloud-57
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: GCP Authentication
        run: |
          gcloud auth configure-docker us.gcr.io
          gcloud container clusters get-credentials default-cluster --zone us-central1-a

      - name: Build
        run: |        
          docker build \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg GUARDIAN_SECRET=${{ secrets.GUARDIAN_SECRET }} \
            --build-arg SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }} \
            --build-arg SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }} \
            --build-arg SENTRY_DSN=${{ secrets.SENTRY_DSN }} \
            --build-arg STRIPE_SECRET=${{ secrets.STRIPE_SECRET }} \
            -f .devops/Dockerfile \
            -t us.gcr.io/cloud-57/txferretrescue-api:${GITHUB_SHA} \
            -t us.gcr.io/cloud-57/txferretrescue-api:latest \
            .
          docker push us.gcr.io/cloud-57/txferretrescue-api

      - name: Setup Helm
        run: |
          helm plugin install https://github.com/hayorov/helm-gcs.git
          helm repo add cloud-57 gs://cloud-57-helm
          helm repo update

      - name: Rollout Deploy
        run: |
          helm upgrade --install txferretrescue cloud-57/cloud-57 \
          -f .devops/helm/values.yaml \
          --version v1.0.1 \
          --set image.repository=us.gcr.io/cloud-57/txferretrescue-api \
          --set image.tag=${GITHUB_SHA} \
          -n backend
          kubectl rollout status --watch deployment txferretrescue -n backend

  frontend:
    name: Frontend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@main

      - name: Cache Node Modules
        uses: actions/cache@master
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - run: npm install
      - run: npm run build

      - uses: w9jds/firebase-action@master
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: frontend

  admin-frontend:
    name: Admin Frontend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: admin-frontend

    steps:
      - uses: actions/checkout@main

      - name: Cache Node Modules
        uses: actions/cache@master
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - run: npm install
      - run: npm run build

      - uses: w9jds/firebase-action@master
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: admin-frontend